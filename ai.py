def rgb_checker(pixel, testpixel, score):
    x = 0
    score_add = 0
    while x < 3:
        if round(pixel[x]/3) == round(testpixel[x]/3):
            score_add += 1
        x += 1
    return score + score_add

def pixel_checker(row, testrow, score):
    x = 0
    while x < 99:
        score += rgb_checker(row[x], testrow[x], score)
        x += 1
    return score

def row_checker(image, testimage, score):
    x = 0
    while x < 99:
        score += pixel_checker(image[x], testimage[x], score)
        x += 1
    return score

import numpy as np
import cv2
import glob
import os
import sys
import time
x = 1
cat = []
dog = []
while x < 11:
    cat += [cv2.imread(cv2.samples.findFile("training_set/cats/" + str(x) + ".png"))]
    dog += [cv2.imread(cv2.samples.findFile("training_set/dogs/" + str(x) + ".png"))]
    x += 1
test = cv2.imread(cv2.samples.findFile("test_set/cats/test.png"))
catidea = 0
dogidea = 0
x = 0
while x < len(cat):
    catidea = row_checker(cat[x], test, catidea)
    dogidea = row_checker(dog[x], test, dogidea)
if catidea >= dogidea:
    time.sleep(1)
    print('cat')
if dogidea >= catidea:
    time.sleep(1)
    print('dog')
if catidea == dogidea:
    time.sleep(1)
    print('ÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂsÄÂĂÂÄÂĂÂĂÂĂÂÄÂĂÂÄÂĂÂ~ÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂ>ÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂÄÂĂÂĂÂĂÂÄÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂÄÂĂÂĂÂĂÂÄÂĂÂdÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂ{ÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂÄÂĂÂĂÂĂÂĂĹĄĂËÄÂĂÂÄÂĂÂĂÂĂÂÄÂÄšĹžÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂ ÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂ1ÄÂĂÂÄÂĂÂÄÂÄšÄÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂÄÂĂÂĂĹĄÄšÄ˝ĂÂĂÂĂĹĄÄšĹĂÂĂÂÄÂĂÂ')
print("")
print(catidea)
print('\n')
print(dogidea))
